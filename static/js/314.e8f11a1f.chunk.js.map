{"version":3,"file":"static/js/314.e8f11a1f.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","redux/filter/selectors.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  color: teal;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  color: green;\n  margin: 10px;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  cursor: pointer;\n  padding: 5px;\n  border-radius: 4px;\n  border: 1px solid #47bdfd;\n  background-color: #00e1ff;\n  margin-bottom: 25px;\n  &:hover {\n    background-color: #8aaa52fc;\n  }\n`;\n\nexport const Input = styled.input`\n  border: solid teal 2px;\n  border-radius: 4px;\n  margin: 10px;\n  &:focus {\n    border-radius: 4px;\n    border: solid teal 2px;\n    box-shadow: 20px 20px 50px teal;\n  }\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","export const selectContactsFilter = state => state.filters.filter;\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  margin-bottom: 10px;\n  padding: 8px;\n  display: flex;\n  align-items: center;\n  border: solid 1px #787878;\n  border-radius: 5px;\n  height: 30px;\n`;\n\nexport const ContactIcon = styled.div`\n  margin-right: 15px;\n  border: 1px solid #787878;\n  border-radius: 4px;\n  width: 27px;\n  height: 27px;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  svg {\n    width: 25px;\n    height: 25px;\n  }\n`;\n\nexport const ContactText = styled.p`\n  font-size: 24px;\n  color: indianred;\n  span {\n    text-decoration: underline;\n  }\n`;\n\nexport const ContactDelete = styled.button`\n  color: black;\n  margin-right: 0;\n  margin-left: auto;\n  border: none;\n  border-radius: 5px;\n  height: 40px;\n  border: none;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n\n  svg {\n    width: 25px;\n    height: 25px;\n  }\n  &:hover,\n  &:focus {\n    color: rgb(255, 255, 255);\n    background-color: red;\n    cursor: pointer;\n  }\n`;\n","import { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { IoClose, IoPersonOutline } from 'react-icons/io5';\nimport {\n  ContactIcon,\n  ContactItem,\n  ContactText,\n  ContactDelete,\n} from './Contact.styled';\n\nconst Contact = ({ contact: { name, number, id } }) => {\n  const dispatch = useDispatch();\n  const removeContact = e => {\n    dispatch(deleteContact(e.currentTarget.id));\n    return toast.info(`Contact ${name} successfully removed!`);\n  };\n  return (\n    <ContactItem>\n      <ContactIcon>\n        <IoPersonOutline />\n      </ContactIcon>\n      <ContactText>{name}</ContactText>\n      <ContactText>{number}</ContactText>\n      <ContactDelete type=\"button\" id={id} onClick={removeContact}>\n        <IoClose />\n      </ContactDelete>\n    </ContactItem>\n  );\n};\n\nexport default Contact;\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  padding: 10px;\n`;\n","import { selectContacts } from 'redux/contacts/selectors';\nimport { selectContactsFilter } from 'redux/filter/selectors';\nimport { useSelector } from 'react-redux';\nimport Contact from '../Contact';\nimport { ContactsList } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filtredName = useSelector(selectContactsFilter).toLowerCase();\n\n  const getFiltredContact = () => {\n    if (!filtredName || filtredName === '') {\n      return contacts;\n    }\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filtredName.toLowerCase())\n    );\n  };\n  const filtredContacts = getFiltredContact();\n\n  return (\n    <ContactsList>\n      {filtredContacts.map(contact => (\n        <Contact key={contact.id} contact={contact} />\n      ))}\n    </ContactsList>\n  );\n};\n\nexport default ContactList;\n","import { setFilterContacts } from 'redux/filter/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport { Input, Label, Form } from '../ContactForm/ContactForm.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const changeFilter = e => {\n    dispatch(setFilterContacts(e.target.value));\n  };\n  return (\n    <Form>\n      <Label>\n        Find contact by name\n        <Input type=\"text\" onChange={changeFilter} />\n      </Label>\n    </Form>\n  );\n};\n\nexport default Filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { IoPersonAdd } from 'react-icons/io5';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\n\nconst ConatctForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const dataForm = e.target;\n    const name = dataForm.name.value;\n    const number = dataForm.number.value;\n    if (\n      contacts.find(\n        contact => name.toLowerCase() === contact.name.toLowerCase()\n      )\n    ) {\n      return toast.warn(`${name} is already in contacts.`);\n    }\n    dispatch(addContact({ name, number }));\n    toast.success(`Contact ${name} is successfully added!`);\n    dataForm.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name:\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter your name...\"\n        />\n      </Label>\n      <Label>\n        Number:\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter your number...\"\n        />\n      </Label>\n      <Button>\n        <IoPersonAdd />\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n\nexport default ConatctForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { MutatingDots } from 'react-loader-spinner';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport ContactList from '../../components/ContactList';\nimport Filter from '../../components/Filter';\nimport ContactForm from '../../components/ContactForm';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Your phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && (\n        <MutatingDots\n          height=\"100\"\n          width=\"100\"\n          color=\"yellow\"\n          secondaryColor=\"blue\"\n          radius=\"12.5\"\n          ariaLabel=\"mutating-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      )}\n      <ContactList />\n    </div>\n  );\n};\nexport default Contacts;\n"],"names":["Form","styled","Label","Button","Input","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","filter","ContactItem","ContactIcon","ContactText","ContactDelete","contact","name","number","id","dispatch","useDispatch","type","onClick","e","deleteContact","currentTarget","toast","ContactsList","useSelector","filtredName","toLowerCase","filtredContacts","includes","map","onChange","setFilterContacts","target","value","onSubmit","preventDefault","dataForm","find","addContact","reset","pattern","title","required","placeholder","useEffect","fetchContacts","ContactForm","height","width","color","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","visible"],"sourceRoot":""}