{"version":3,"file":"static/js/884.5eaa57d4.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContactsFilter = state => state.filters.filter;\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  list-style-type: none;\n  display: flex;\n  align-items: center;\n`;\n\nexport const ContactBtn = styled.button`\n  margin-bottom: 5px;\n  width: 100px;\n  cursor: pointer;\n  padding: 5px;\n  color: yellow;\n  border-radius: 4px;\n  border: 1px solid #47bdfd;\n  background-color: #00e1ff;\n  &:hover {\n    background-color: #ea1111fc;\n  }\n`;\n\nexport const Text = styled.p`\n  color: teal;\n  margin-right: 20px;\n`;\n","import { ContactBtn, Text, ListItem } from './Contact.styled';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nconst Contact = ({ contact: { name, number, id } }) => {\n  const dispatch = useDispatch();\n  const removeContact = e => {\n    dispatch(deleteContact(e.currentTarget.id));\n    return toast.info(`Contact ${name} successfully removed!`);\n  };\n  return (\n    <ListItem>\n      <Text>{name}</Text>\n      <Text>{number}</Text>\n      <ContactBtn type=\"button\" id={id} onClick={removeContact}>\n        !Delete!\n      </ContactBtn>\n    </ListItem>\n  );\n};\n\nexport default Contact;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { selectContacts, selectContactsFilter } from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\nimport Contact from '../Contact';\nimport { List } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filtredName = useSelector(selectContactsFilter).toLowerCase();\n\n  const getFiltredContact = () => {\n    if (!filtredName || filtredName === '') {\n      return contacts;\n    }\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filtredName.toLowerCase())\n    );\n  };\n  const filtredContacts = getFiltredContact();\n\n  return (\n    <List>\n      {filtredContacts.map(contact => (\n        <Contact key={contact.id} contact={contact} />\n      ))}\n    </List>\n  );\n};\n\nexport default ContactList;\n","import styled from \"styled-components\";\n\nexport const Form = styled.form`\n  color: teal;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n  \n`;\n\nexport const Label = styled.label`\n  color: green;\n  margin: 10px;\n`;\n\nexport const Button = styled.button`\n    width: 100px;\n    cursor: pointer;\n    padding: 5px;\n    border-radius: 4px;\n    border: 1px solid #47bdfd;\n    background-color: #00e1ff;\n    margin-bottom: 25px;\n  &:hover {\n    background-color: #8aaa52fc;\n  }\n`;\n\nexport const Input = styled.input`\n  border: solid teal 2px;\n  border-radius: 4px;\n  margin: 10px;\n  &:focus {\n    border-radius: 4px;\n    border: solid  teal 2px;\n    box-shadow: 20px 20px 50px teal;\n  }\n`;","import { Form, Label, Input } from '../ContactForm/ContactForm.styled';\nimport { setFilterContacts } from 'redux/contacts/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const changeFilter = e => {\n    dispatch(setFilterContacts(e.target.value));\n  };\n  return (\n    <Form>\n      <Label>\n        Find contact by name\n        <Input type=\"text\" onChange={changeFilter} />\n      </Label>\n    </Form>\n  );\n};\n\nexport default Filter;\n","import { Form, Label, Button, Input } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { IoPersonAdd } from 'react-icons/io5';\n\nconst ConatctForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const dataForm = e.target;\n    const name = dataForm.name.value;\n    const number = dataForm.number.value;\n    if (\n      contacts.find(\n        contact => name.toLowerCase() === contact.name.toLowerCase()\n      )\n    ) {\n      return toast.warn(`${name} is already in contacts.`);\n    }\n    console.log(name, number);\n    dispatch(addContact({ name, number }));\n    toast.success(`Contact ${name} is successfully added!`);\n    dataForm.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name:\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter your name...\"\n        />\n      </Label>\n      <Label>\n        Number:\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter your number...\"\n        />\n      </Label>\n      <Button>\n        <IoPersonAdd />\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n\nexport default ConatctForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { MutatingDots } from 'react-loader-spinner';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport ContactForm from 'components/ContactForm';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Your phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && (\n        <MutatingDots\n          height=\"100\"\n          width=\"100\"\n          color=\"yellow\"\n          secondaryColor=\"blue\"\n          radius=\"12.5\"\n          ariaLabel=\"mutating-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      )}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","filter","ListItem","styled","ContactBtn","Text","contact","name","number","id","dispatch","useDispatch","type","onClick","e","deleteContact","currentTarget","toast","List","useSelector","filtredName","toLowerCase","filtredContacts","includes","map","Form","Label","Button","Input","onChange","setFilterContacts","target","value","onSubmit","preventDefault","dataForm","find","console","log","addContact","reset","pattern","title","required","placeholder","useEffect","fetchContacts","ContactForm","height","width","color","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","visible"],"sourceRoot":""}